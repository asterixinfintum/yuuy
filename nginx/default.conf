server {
    server_name www.domain.com;

    # Listen on both port 80 (HTTP) and 443 (HTTPS)
    listen 80;
    listen 443 ssl;

    # SSL configuration for HTTPS
    ssl_certificate /etc/nginx/certs/www.fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/www.privkey.pem;

    # Redirect HTTP to HTTPS
    if ($scheme = http) {
        return 301 https://$host$request_uri;
    }

    # Proxy settings for HTTPS traffic
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://nuxt-app:4000;
        proxy_redirect off;
    }
}

# Server block for api.domain.com (HTTP)
server {
    server_name api.domain.com;
    listen 80;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        rewrite ^/api/?(.*) /$1 break;
        proxy_pass http://api:8001;
        proxy_redirect off;
    }
}

# Server block for domain.com (HTTPS)
server {
    server_name domain.com;
    listen 443 ssl;

    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://nuxt-app:4000;
        proxy_redirect off;
    }
}

# Server block for api.domain.com (HTTPS)
server {
   listen 443 ssl;
   server_name api.domain.com;
   
   ssl_certificate /etc/nginx/certs/api.fullchain.pem;
   ssl_certificate_key /etc/nginx/certs/api.privkey.pem;
   
   location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://api:8001;
        proxy_redirect off;

        # Uncomment these if CORS is needed
        # add_header 'Access-Control-Allow-Origin' '*';
        # add_header 'Access-Control-Allow-Credentials' 'true';
        # add_header 'Access-Control-Allow-Methods' 'PUT, POST, PATCH, DELETE, GET';
        # add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
    }
}